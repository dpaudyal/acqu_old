//
// File generated by rootcint at Sat Aug 25 09:02:13 2007

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MCDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TMCParticle_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMCParticle(void *p);
   static void deleteArray_TMCParticle(void *p);
   static void destruct_TMCParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCParticle*)
   {
      ::TMCParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCParticle", ::TMCParticle::Class_Version(), "/home/acqu/4v1/acqu/AcquMC/src/TMCParticle.h", 25,
                  typeid(::TMCParticle), DefineBehavior(ptr, ptr),
                  &::TMCParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TMCParticle) );
      instance.SetDelete(&delete_TMCParticle);
      instance.SetDeleteArray(&deleteArray_TMCParticle);
      instance.SetDestructor(&destruct_TMCParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCParticle*)
   {
      return GenerateInitInstanceLocal((::TMCParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCResonance_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMCResonance(void *p);
   static void deleteArray_TMCResonance(void *p);
   static void destruct_TMCResonance(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCResonance*)
   {
      ::TMCResonance *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCResonance >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCResonance", ::TMCResonance::Class_Version(), "/home/acqu/4v1/acqu/AcquMC/src/TMCResonance.h", 20,
                  typeid(::TMCResonance), DefineBehavior(ptr, ptr),
                  &::TMCResonance::Dictionary, isa_proxy, 4,
                  sizeof(::TMCResonance) );
      instance.SetDelete(&delete_TMCResonance);
      instance.SetDeleteArray(&deleteArray_TMCResonance);
      instance.SetDestructor(&destruct_TMCResonance);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCResonance*)
   {
      return GenerateInitInstanceLocal((::TMCResonance*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCResonance*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCFoamInt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMCFoamInt(void *p);
   static void deleteArray_TMCFoamInt(void *p);
   static void destruct_TMCFoamInt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCFoamInt*)
   {
      ::TMCFoamInt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCFoamInt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCFoamInt", ::TMCFoamInt::Class_Version(), "/home/acqu/4v1/acqu/AcquMC/src/TMCFoamInt.h", 34,
                  typeid(::TMCFoamInt), DefineBehavior(ptr, ptr),
                  &::TMCFoamInt::Dictionary, isa_proxy, 4,
                  sizeof(::TMCFoamInt) );
      instance.SetDelete(&delete_TMCFoamInt);
      instance.SetDeleteArray(&deleteArray_TMCFoamInt);
      instance.SetDestructor(&destruct_TMCFoamInt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCFoamInt*)
   {
      return GenerateInitInstanceLocal((::TMCFoamInt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCFoamInt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCFoamParticle_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMCFoamParticle(void *p);
   static void deleteArray_TMCFoamParticle(void *p);
   static void destruct_TMCFoamParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCFoamParticle*)
   {
      ::TMCFoamParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCFoamParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCFoamParticle", ::TMCFoamParticle::Class_Version(), "/home/acqu/4v1/acqu/AcquMC/src/TMCFoamParticle.h", 42,
                  typeid(::TMCFoamParticle), DefineBehavior(ptr, ptr),
                  &::TMCFoamParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TMCFoamParticle) );
      instance.SetDelete(&delete_TMCFoamParticle);
      instance.SetDeleteArray(&deleteArray_TMCFoamParticle);
      instance.SetDestructor(&destruct_TMCFoamParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCFoamParticle*)
   {
      return GenerateInitInstanceLocal((::TMCFoamParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCFoamParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCGenerator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMCGenerator(void *p);
   static void deleteArray_TMCGenerator(void *p);
   static void destruct_TMCGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCGenerator*)
   {
      ::TMCGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCGenerator", ::TMCGenerator::Class_Version(), "/home/acqu/4v1/acqu/AcquMC/src/TMCGenerator.h", 54,
                  typeid(::TMCGenerator), DefineBehavior(ptr, ptr),
                  &::TMCGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::TMCGenerator) );
      instance.SetDelete(&delete_TMCGenerator);
      instance.SetDeleteArray(&deleteArray_TMCGenerator);
      instance.SetDestructor(&destruct_TMCGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCGenerator*)
   {
      return GenerateInitInstanceLocal((::TMCGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCFoamGenerator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMCFoamGenerator(void *p);
   static void deleteArray_TMCFoamGenerator(void *p);
   static void destruct_TMCFoamGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCFoamGenerator*)
   {
      ::TMCFoamGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCFoamGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCFoamGenerator", ::TMCFoamGenerator::Class_Version(), "/home/acqu/4v1/acqu/AcquMC/src/TMCFoamGenerator.h", 24,
                  typeid(::TMCFoamGenerator), DefineBehavior(ptr, ptr),
                  &::TMCFoamGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::TMCFoamGenerator) );
      instance.SetDelete(&delete_TMCFoamGenerator);
      instance.SetDeleteArray(&deleteArray_TMCFoamGenerator);
      instance.SetDestructor(&destruct_TMCFoamGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCFoamGenerator*)
   {
      return GenerateInitInstanceLocal((::TMCFoamGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCFoamGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCPhotoPSInt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMCPhotoPSInt(void *p);
   static void deleteArray_TMCPhotoPSInt(void *p);
   static void destruct_TMCPhotoPSInt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCPhotoPSInt*)
   {
      ::TMCPhotoPSInt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCPhotoPSInt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCPhotoPSInt", ::TMCPhotoPSInt::Class_Version(), "/home/acqu/4v1/acqu/AcquMC/src/TMCPhotoPSInt.h", 31,
                  typeid(::TMCPhotoPSInt), DefineBehavior(ptr, ptr),
                  &::TMCPhotoPSInt::Dictionary, isa_proxy, 4,
                  sizeof(::TMCPhotoPSInt) );
      instance.SetDelete(&delete_TMCPhotoPSInt);
      instance.SetDeleteArray(&deleteArray_TMCPhotoPSInt);
      instance.SetDestructor(&destruct_TMCPhotoPSInt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCPhotoPSInt*)
   {
      return GenerateInitInstanceLocal((::TMCPhotoPSInt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCPhotoPSInt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCPhotoPSGenerator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TMCPhotoPSGenerator(void *p);
   static void deleteArray_TMCPhotoPSGenerator(void *p);
   static void destruct_TMCPhotoPSGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCPhotoPSGenerator*)
   {
      ::TMCPhotoPSGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCPhotoPSGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCPhotoPSGenerator", ::TMCPhotoPSGenerator::Class_Version(), "/home/acqu/4v1/acqu/AcquMC/src/TMCPhotoPSGenerator.h", 19,
                  typeid(::TMCPhotoPSGenerator), DefineBehavior(ptr, ptr),
                  &::TMCPhotoPSGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::TMCPhotoPSGenerator) );
      instance.SetDelete(&delete_TMCPhotoPSGenerator);
      instance.SetDeleteArray(&deleteArray_TMCPhotoPSGenerator);
      instance.SetDestructor(&destruct_TMCPhotoPSGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCPhotoPSGenerator*)
   {
      return GenerateInitInstanceLocal((::TMCPhotoPSGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCPhotoPSGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TMCParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCParticle::Class_Name()
{
   return "TMCParticle";
}

//______________________________________________________________________________
const char *TMCParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCResonance::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCResonance::Class_Name()
{
   return "TMCResonance";
}

//______________________________________________________________________________
const char *TMCResonance::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCResonance*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCResonance::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCResonance*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCResonance::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCResonance*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCResonance::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCResonance*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCFoamInt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCFoamInt::Class_Name()
{
   return "TMCFoamInt";
}

//______________________________________________________________________________
const char *TMCFoamInt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamInt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCFoamInt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamInt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCFoamInt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamInt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCFoamInt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamInt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCFoamParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCFoamParticle::Class_Name()
{
   return "TMCFoamParticle";
}

//______________________________________________________________________________
const char *TMCFoamParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCFoamParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCFoamParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCFoamParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCGenerator::Class_Name()
{
   return "TMCGenerator";
}

//______________________________________________________________________________
const char *TMCGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCFoamGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCFoamGenerator::Class_Name()
{
   return "TMCFoamGenerator";
}

//______________________________________________________________________________
const char *TMCFoamGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCFoamGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCFoamGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCFoamGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCFoamGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCPhotoPSInt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCPhotoPSInt::Class_Name()
{
   return "TMCPhotoPSInt";
}

//______________________________________________________________________________
const char *TMCPhotoPSInt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCPhotoPSInt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCPhotoPSInt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCPhotoPSInt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCPhotoPSInt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCPhotoPSInt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCPhotoPSInt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCPhotoPSInt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCPhotoPSGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCPhotoPSGenerator::Class_Name()
{
   return "TMCPhotoPSGenerator";
}

//______________________________________________________________________________
const char *TMCPhotoPSGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCPhotoPSGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCPhotoPSGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCPhotoPSGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCPhotoPSGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCPhotoPSGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCPhotoPSGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCPhotoPSGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMCGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void TMCGenerator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMCGenerator.
      TClass *R__cl = ::TMCGenerator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fRand", &fRand);
      R__insp.Inspect(R__cl, R__parent, "fSeed", &fSeed);
      R__insp.Inspect(R__cl, R__parent, "fNrun", &fNrun);
      R__insp.Inspect(R__cl, R__parent, "*fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__parent, "fTargetMass", &fTargetMass);
      R__insp.Inspect(R__cl, R__parent, "fTargetQFRecoilMass", &fTargetQFRecoilMass);
      R__insp.Inspect(R__cl, R__parent, "fTargetRadius", &fTargetRadius);
      R__insp.Inspect(R__cl, R__parent, "fTargetLength", &fTargetLength);
      R__insp.Inspect(R__cl, R__parent, "*fTargetCentre", &fTargetCentre);
      R__insp.Inspect(R__cl, R__parent, "*fVertex", &fVertex);
      R__insp.Inspect(R__cl, R__parent, "*fBeamCentre", &fBeamCentre);
      R__insp.Inspect(R__cl, R__parent, "*fP4Target", &fP4Target);
      R__insp.Inspect(R__cl, R__parent, "*fP4TargetQF", &fP4TargetQF);
      R__insp.Inspect(R__cl, R__parent, "*fP4Beam", &fP4Beam);
      R__insp.Inspect(R__cl, R__parent, "*fP4R", &fP4R);
      R__insp.Inspect(R__cl, R__parent, "*fBeam", &fBeam);
      R__insp.Inspect(R__cl, R__parent, "*fTargetQF", &fTargetQF);
      R__insp.Inspect(R__cl, R__parent, "*fReaction", &fReaction);
      R__insp.Inspect(R__cl, R__parent, "fNThrow", &fNThrow);
      R__insp.Inspect(R__cl, R__parent, "fNParticle", &fNParticle);
      R__insp.Inspect(R__cl, R__parent, "*fResonance", &fResonance);
      R__insp.Inspect(R__cl, R__parent, "*fReactionList", &fReactionList);
      R__insp.Inspect(R__cl, R__parent, "*fParticle", &fParticle);
      R__insp.Inspect(R__cl, R__parent, "*fTreeFileName", &fTreeFileName);
      R__insp.Inspect(R__cl, R__parent, "*fTreeFile", &fTreeFile);
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fNtuple", &fNtuple);
      R__insp.Inspect(R__cl, R__parent, "*fBranch", &fBranch);
      R__insp.Inspect(R__cl, R__parent, "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__parent, "fIsTreeOut", &fIsTreeOut);
      R__insp.Inspect(R__cl, R__parent, "fIsNtupleOut", &fIsNtupleOut);
      R__insp.Inspect(R__cl, R__parent, "fIsError", &fIsError);
      TA2System::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCGenerator(void *p) {
      delete ((::TMCGenerator*)p);
   }
   static void deleteArray_TMCGenerator(void *p) {
      delete [] ((::TMCGenerator*)p);
   }
   static void destruct_TMCGenerator(void *p) {
      typedef ::TMCGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCGenerator

//______________________________________________________________________________
void TMCFoamGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCFoamGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCFoamGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCFoamGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void TMCFoamGenerator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMCFoamGenerator.
      TClass *R__cl = ::TMCFoamGenerator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFoamList", &fFoamList);
      R__insp.Inspect(R__cl, R__parent, "*fFoamX", &fFoamX);
      R__insp.Inspect(R__cl, R__parent, "*fInt", &fInt);
      R__insp.Inspect(R__cl, R__parent, "*fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "*fXscale", &fXscale);
      R__insp.Inspect(R__cl, R__parent, "*fScale", &fScale);
      R__insp.Inspect(R__cl, R__parent, "*fFoamInitOpt", &fFoamInitOpt);
      R__insp.Inspect(R__cl, R__parent, "fNDim", &fNDim);
      R__insp.Inspect(R__cl, R__parent, "fFnOpt", &fFnOpt);
      R__insp.Inspect(R__cl, R__parent, "fIbrem", &fIbrem);
      R__insp.Inspect(R__cl, R__parent, "fIsBremWgt", &fIsBremWgt);
      TMCGenerator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCFoamGenerator(void *p) {
      delete ((::TMCFoamGenerator*)p);
   }
   static void deleteArray_TMCFoamGenerator(void *p) {
      delete [] ((::TMCFoamGenerator*)p);
   }
   static void destruct_TMCFoamGenerator(void *p) {
      typedef ::TMCFoamGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCFoamGenerator

//______________________________________________________________________________
void TMCPhotoPSGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCPhotoPSGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCPhotoPSGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCPhotoPSGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void TMCPhotoPSGenerator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMCPhotoPSGenerator.
      TClass *R__cl = ::TMCPhotoPSGenerator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNE", &fNE);
      R__insp.Inspect(R__cl, R__parent, "fNth", &fNth);
      R__insp.Inspect(R__cl, R__parent, "*fPSInt", &fPSInt);
      TMCFoamGenerator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCPhotoPSGenerator(void *p) {
      delete ((::TMCPhotoPSGenerator*)p);
   }
   static void deleteArray_TMCPhotoPSGenerator(void *p) {
      delete [] ((::TMCPhotoPSGenerator*)p);
   }
   static void destruct_TMCPhotoPSGenerator(void *p) {
      typedef ::TMCPhotoPSGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCPhotoPSGenerator

//______________________________________________________________________________
void TMCParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TMCParticle::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMCParticle.
      TClass *R__cl = ::TMCParticle::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fRandom", &fRandom);
      R__insp.Inspect(R__cl, R__parent, "*fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__parent, "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__parent, "*fP4", &fP4);
      R__insp.Inspect(R__cl, R__parent, "*fP4d", &fP4d);
      R__insp.Inspect(R__cl, R__parent, "*fP4Beam", &fP4Beam);
      R__insp.Inspect(R__cl, R__parent, "*fDecayList", &fDecayList);
      R__insp.Inspect(R__cl, R__parent, "*fThetaDist", &fThetaDist);
      R__insp.Inspect(R__cl, R__parent, "fThetaLow", &fThetaLow);
      R__insp.Inspect(R__cl, R__parent, "fThetaHigh", &fThetaHigh);
      R__insp.Inspect(R__cl, R__parent, "*fCosThDist", &fCosThDist);
      R__insp.Inspect(R__cl, R__parent, "fCosThLow", &fCosThLow);
      R__insp.Inspect(R__cl, R__parent, "fCosThHigh", &fCosThHigh);
      R__insp.Inspect(R__cl, R__parent, "*fPhiDist", &fPhiDist);
      R__insp.Inspect(R__cl, R__parent, "fPhiLow", &fPhiLow);
      R__insp.Inspect(R__cl, R__parent, "fPhiHigh", &fPhiHigh);
      R__insp.Inspect(R__cl, R__parent, "*fTDist", &fTDist);
      R__insp.Inspect(R__cl, R__parent, "fTLow", &fTLow);
      R__insp.Inspect(R__cl, R__parent, "fTHigh", &fTHigh);
      R__insp.Inspect(R__cl, R__parent, "*fPDist", &fPDist);
      R__insp.Inspect(R__cl, R__parent, "fPLow", &fPLow);
      R__insp.Inspect(R__cl, R__parent, "fPHigh", &fPHigh);
      R__insp.Inspect(R__cl, R__parent, "fMass", &fMass);
      R__insp.Inspect(R__cl, R__parent, "fMassQF", &fMassQF);
      R__insp.Inspect(R__cl, R__parent, "*fMd", &fMd);
      R__insp.Inspect(R__cl, R__parent, "*fMd2", &fMd2);
      R__insp.Inspect(R__cl, R__parent, "fTcm", &fTcm);
      R__insp.Inspect(R__cl, R__parent, "fWt", &fWt);
      R__insp.Inspect(R__cl, R__parent, "fWtMax", &fWtMax);
      R__insp.Inspect(R__cl, R__parent, "fPDGindex", &fPDGindex);
      R__insp.Inspect(R__cl, R__parent, "fNd", &fNd);
      R__insp.Inspect(R__cl, R__parent, "fDecayMode", &fDecayMode);
      R__insp.Inspect(R__cl, R__parent, "fIsDecay", &fIsDecay);
      R__insp.Inspect(R__cl, R__parent, "fIsTrack", &fIsTrack);
      R__insp.Inspect(R__cl, R__parent, "fIsResonance", &fIsResonance);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCParticle(void *p) {
      delete ((::TMCParticle*)p);
   }
   static void deleteArray_TMCParticle(void *p) {
      delete [] ((::TMCParticle*)p);
   }
   static void destruct_TMCParticle(void *p) {
      typedef ::TMCParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCParticle

//______________________________________________________________________________
void TMCResonance::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCResonance.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCResonance::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCResonance::Class(),this);
   }
}

//______________________________________________________________________________
void TMCResonance::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMCResonance.
      TClass *R__cl = ::TMCResonance::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fGamma", &fGamma);
      R__insp.Inspect(R__cl, R__parent, "*fMassDist", &fMassDist);
      R__insp.Inspect(R__cl, R__parent, "fMLow", &fMLow);
      R__insp.Inspect(R__cl, R__parent, "fMHigh", &fMHigh);
      TMCParticle::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCResonance(void *p) {
      delete ((::TMCResonance*)p);
   }
   static void deleteArray_TMCResonance(void *p) {
      delete [] ((::TMCResonance*)p);
   }
   static void destruct_TMCResonance(void *p) {
      typedef ::TMCResonance current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCResonance

//______________________________________________________________________________
void TMCFoamParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCFoamParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCFoamParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCFoamParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TMCFoamParticle::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMCFoamParticle.
      TClass *R__cl = ::TMCFoamParticle::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fXscale", &fXscale);
      R__insp.Inspect(R__cl, R__parent, "*fScale", &fScale);
      R__insp.Inspect(R__cl, R__parent, "fITheta", &fITheta);
      R__insp.Inspect(R__cl, R__parent, "fICosTheta", &fICosTheta);
      R__insp.Inspect(R__cl, R__parent, "fIPhi", &fIPhi);
      R__insp.Inspect(R__cl, R__parent, "fIEnergy", &fIEnergy);
      R__insp.Inspect(R__cl, R__parent, "fIMomentum", &fIMomentum);
      TMCParticle::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCFoamParticle(void *p) {
      delete ((::TMCFoamParticle*)p);
   }
   static void deleteArray_TMCFoamParticle(void *p) {
      delete [] ((::TMCFoamParticle*)p);
   }
   static void destruct_TMCFoamParticle(void *p) {
      typedef ::TMCFoamParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCFoamParticle

//______________________________________________________________________________
void TMCFoamInt::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCFoamInt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCFoamInt::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCFoamInt::Class(),this);
   }
}

//______________________________________________________________________________
void TMCFoamInt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMCFoamInt.
      TClass *R__cl = ::TMCFoamInt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fXarg", &fXarg);
      R__insp.Inspect(R__cl, R__parent, "*fScale", &fScale);
      R__insp.Inspect(R__cl, R__parent, "*fXscaled", &fXscaled);
      R__insp.Inspect(R__cl, R__parent, "*fYN", &fYN);
      R__insp.Inspect(R__cl, R__parent, "*fXN", &fXN);
      R__insp.Inspect(R__cl, R__parent, "*fUj", &fUj);
      R__insp.Inspect(R__cl, R__parent, "*fXd", &fXd);
      R__insp.Inspect(R__cl, R__parent, "*fPolB", &fPolB);
      R__insp.Inspect(R__cl, R__parent, "*fPolT", &fPolT);
      R__insp.Inspect(R__cl, R__parent, "*fPolR", &fPolR);
      R__insp.Inspect(R__cl, R__parent, "*flRecPol", &flRecPol);
      R__insp.Inspect(R__cl, R__parent, "*fCMtoLAB", &fCMtoLAB);
      R__insp.Inspect(R__cl, R__parent, "*fSN", &fSN);
      R__insp.Inspect(R__cl, R__parent, "*fM0", &fM0);
      R__insp.Inspect(R__cl, R__parent, "*fM1", &fM1);
      R__insp.Inspect(R__cl, R__parent, "*fM2", &fM2);
      R__insp.Inspect(R__cl, R__parent, "fNDim", &fNDim);
      R__insp.Inspect(R__cl, R__parent, "fIbrem", &fIbrem);
      R__insp.Inspect(R__cl, R__parent, "fDensOpt", &fDensOpt);
      R__insp.Inspect(R__cl, R__parent, "fIsBremWgt", &fIsBremWgt);
      TFoamIntegrand::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCFoamInt(void *p) {
      delete ((::TMCFoamInt*)p);
   }
   static void deleteArray_TMCFoamInt(void *p) {
      delete [] ((::TMCFoamInt*)p);
   }
   static void destruct_TMCFoamInt(void *p) {
      typedef ::TMCFoamInt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCFoamInt

//______________________________________________________________________________
void TMCPhotoPSInt::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCPhotoPSInt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCPhotoPSInt::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCPhotoPSInt::Class(),this);
   }
}

//______________________________________________________________________________
void TMCPhotoPSInt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMCPhotoPSInt.
      TClass *R__cl = ::TMCPhotoPSInt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNE", &fNE);
      R__insp.Inspect(R__cl, R__parent, "fNth", &fNth);
      R__insp.Inspect(R__cl, R__parent, "fNIntp", &fNIntp);
      R__insp.Inspect(R__cl, R__parent, "*fPSO", &fPSO);
      TMCFoamInt::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMCPhotoPSInt(void *p) {
      delete ((::TMCPhotoPSInt*)p);
   }
   static void deleteArray_TMCPhotoPSInt(void *p) {
      delete [] ((::TMCPhotoPSInt*)p);
   }
   static void destruct_TMCPhotoPSInt(void *p) {
      typedef ::TMCPhotoPSInt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCPhotoPSInt

/********************************************************
* /home/jrma/acqu/root/src/MCDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableMCDict();

extern "C" void G__set_cpp_environmentMCDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/acqu/4v1/acqu/AcquMC/src/TMCFoamGenerator.h");
  G__add_compiledheader("/home/acqu/4v1/acqu/AcquMC/src/TMCFoamInt.h");
  G__add_compiledheader("/home/acqu/4v1/acqu/AcquMC/src/TMCFoamParticle.h");
  G__add_compiledheader("/home/acqu/4v1/acqu/AcquMC/src/TMCGenerator.h");
  G__add_compiledheader("/home/acqu/4v1/acqu/AcquMC/src/TMCParticle.h");
  G__add_compiledheader("/home/acqu/4v1/acqu/AcquMC/src/TMCPhotoPSGenerator.h");
  G__add_compiledheader("/home/acqu/4v1/acqu/AcquMC/src/TMCPhotoPSInt.h");
  G__add_compiledheader("/home/acqu/4v1/acqu/AcquMC/src/TMCResonance.h");
  G__cpp_reset_tagtableMCDict();
}
#include <new>
extern "C" int G__cpp_dllrevMCDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMCParticle */
static int G__MCDict_332_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCParticle* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCParticle* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TMCParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCParticle* p = NULL;
   long gvp = G__getgvp();
   //m: 2
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TMCParticle((const Char_t*) G__int(libp->para[0]), (TMCParticle*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMCParticle((const Char_t*) G__int(libp->para[0]), (TMCParticle*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->Flush();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->PostInit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCParticle*) G__getstructoffset())->GenDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCParticle*) G__getstructoffset())->Gen2Decay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCParticle*) G__getstructoffset())->GenNDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->BoostLab();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->FindDist((Int_t) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      result7->obj.reftype.reftype = 2;
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetDist((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetDist((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetDist((Int_t) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->AddDecay((TMCParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->ReplaceDecay((TMCParticle*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->GenMCDist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetRandom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetParent((TMCParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetP4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetP4((TLorentzVector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetP4(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetP4d());
      result7->obj.reftype.reftype = 2;
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetP4d((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetP4Beam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetDecayList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetThetaDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetThetaLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetThetaHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetCosThDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetCosThLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetCosThHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetPhiDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetPhiLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetPhiHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetTDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetTLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetTHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetPDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetPLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetPHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetMassQF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetQF((Double_t) G__double(libp->para[0]), (TLorentzVector*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCParticle*) G__getstructoffset())->GetMd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCParticle*) G__getstructoffset())->GetMd2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetTcm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetWt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->GetWtMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCParticle*) G__getstructoffset())->GetPDGindex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCParticle*) G__getstructoffset())->GetNd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCParticle*) G__getstructoffset())->GetDecayMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetDecayMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCParticle*) G__getstructoffset())->IsDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCParticle*) G__getstructoffset())->IsTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCParticle*) G__getstructoffset())->IsResonance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetDecay((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->SetTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCParticle*) G__getstructoffset())->GetDecay((Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->CosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCParticle*) G__getstructoffset())->Momentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TMCParticle*) G__getstructoffset())->P4((Double_t) G__double(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TMCParticle*) G__getstructoffset())->P4();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_332_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCDict_332_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCParticle(*(TMCParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCParticle G__TTMCParticle;
static int G__MCDict_332_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TMCParticle*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCParticle*) (soff+(sizeof(TMCParticle)*i)))->~G__TTMCParticle();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TMCParticle*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TMCParticle*) (soff))->~G__TTMCParticle();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MCDict_332_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCParticle* dest = (TMCParticle*) G__getstructoffset();
   *dest = *(TMCParticle*) libp->para[0].ref;
   const TMCParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCResonance */
static int G__MCDict_333_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCResonance* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCResonance);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCResonance* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TDatabasePDG*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TDatabasePDG*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TDatabasePDG*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TDatabasePDG*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TDatabasePDG*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TMCResonance(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TDatabasePDG*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCResonance);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCResonance* p = NULL;
   long gvp = G__getgvp();
   //m: 2
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TMCResonance((const Char_t*) G__int(libp->para[0]), (TMCResonance*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMCResonance((const Char_t*) G__int(libp->para[0]), (TMCResonance*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCResonance);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((TMCResonance*) G__getstructoffset())->FindDist((Int_t) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      result7->obj.reftype.reftype = 2;
      break;
   case 3:
      G__letint(result7, 85, (long) ((TMCResonance*) G__getstructoffset())->FindDist((Int_t) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      result7->obj.reftype.reftype = 2;
      break;
   case 2:
      G__letint(result7, 85, (long) ((TMCResonance*) G__getstructoffset())->FindDist((Int_t) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])));
      result7->obj.reftype.reftype = 2;
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCResonance*) G__getstructoffset())->GetGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCResonance*) G__getstructoffset())->GetMassDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCResonance*) G__getstructoffset())->GetMLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCResonance*) G__getstructoffset())->GetMHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCResonance::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCResonance::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCResonance::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCResonance::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCResonance*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCResonance::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCResonance::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCResonance::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_333_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCResonance::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCDict_333_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCResonance* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCResonance(*(TMCResonance*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCResonance);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCResonance G__TTMCResonance;
static int G__MCDict_333_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TMCResonance*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCResonance*) (soff+(sizeof(TMCResonance)*i)))->~G__TTMCResonance();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TMCResonance*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TMCResonance*) (soff))->~G__TTMCResonance();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MCDict_333_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCResonance* dest = (TMCResonance*) G__getstructoffset();
   *dest = *(TMCResonance*) libp->para[0].ref;
   const TMCResonance& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCFoamInt */
static int G__MCDict_342_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCFoamInt* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCFoamInt(
(Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t**) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TMCFoamInt(
(Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t**) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCFoamInt(
(Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t**) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TMCFoamInt(
(Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t**) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((TMCFoamInt*) G__getstructoffset())->LinInterpN((Double_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((TMCFoamInt*) G__getstructoffset())->LinInterpN((Double_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamInt*) G__getstructoffset())->Scale((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamInt*) G__getstructoffset())->SetPol((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamInt*) G__getstructoffset())->SetPolB((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamInt*) G__getstructoffset())->SetPolT((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamInt*) G__getstructoffset())->SetPolR((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TMCFoamInt*) G__getstructoffset())->SetBremWgt((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TMCFoamInt*) G__getstructoffset())->SetBremWgt((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamInt*) G__getstructoffset())->GetXarg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamInt*) G__getstructoffset())->GetScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamInt*) G__getstructoffset())->GetXscaled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamInt*) G__getstructoffset())->GetYN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamInt*) G__getstructoffset())->GetXN());
      result7->obj.reftype.reftype = 2;
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCFoamInt*) G__getstructoffset())->GetPolB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCFoamInt*) G__getstructoffset())->GetPolT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCFoamInt*) G__getstructoffset())->GetPolR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCFoamInt*) G__getstructoffset())->GetlRecPol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TMCFoamInt*) G__getstructoffset())->GetRecPol();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCFoamInt*) G__getstructoffset())->GetCMtoLAB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamInt*) G__getstructoffset())->GetNDim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamInt*) G__getstructoffset())->GetIbrem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamInt*) G__getstructoffset())->GetDensOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCFoamInt*) G__getstructoffset())->IsBremWgt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamInt*) G__getstructoffset())->Test();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCFoamInt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamInt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCFoamInt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCFoamInt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamInt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamInt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCFoamInt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamInt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_342_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCFoamInt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCDict_342_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCFoamInt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCFoamInt(*(TMCFoamInt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCFoamInt G__TTMCFoamInt;
static int G__MCDict_342_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TMCFoamInt*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCFoamInt*) (soff+(sizeof(TMCFoamInt)*i)))->~G__TTMCFoamInt();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TMCFoamInt*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TMCFoamInt*) (soff))->~G__TTMCFoamInt();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MCDict_342_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCFoamInt* dest = (TMCFoamInt*) G__getstructoffset();
   *dest = *(TMCFoamInt*) libp->para[0].ref;
   const TMCFoamInt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCFoamParticle */
static int G__MCDict_343_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCFoamParticle* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCFoamParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Char_t*) G__int(libp->para[5])
, (TA2System*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TMCFoamParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Char_t*) G__int(libp->para[5])
, (TA2System*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCFoamParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Char_t*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TMCFoamParticle(
(const Char_t*) G__int(libp->para[0]), (TRandom*) G__int(libp->para[1])
, (TDatabasePDG*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Char_t*) G__int(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCFoamParticle* p = NULL;
   long gvp = G__getgvp();
   //m: 5
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TMCFoamParticle(
(const Char_t*) G__int(libp->para[0]), (TMCParticle*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TMCFoamParticle(
(const Char_t*) G__int(libp->para[0]), (TMCParticle*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamParticle*) G__getstructoffset())->GetXscale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamParticle*) G__getstructoffset())->GetScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamParticle*) G__getstructoffset())->GetITheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamParticle*) G__getstructoffset())->GetICosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamParticle*) G__getstructoffset())->GetIPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamParticle*) G__getstructoffset())->GetIEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamParticle*) G__getstructoffset())->GetIMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamParticle*) G__getstructoffset())->SetFoamLink((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCFoamParticle*) G__getstructoffset())->Dist((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCFoamParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCFoamParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCFoamParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCFoamParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_343_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCFoamParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCDict_343_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCFoamParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCFoamParticle(*(TMCFoamParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCFoamParticle G__TTMCFoamParticle;
static int G__MCDict_343_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TMCFoamParticle*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCFoamParticle*) (soff+(sizeof(TMCFoamParticle)*i)))->~G__TTMCFoamParticle();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TMCFoamParticle*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TMCFoamParticle*) (soff))->~G__TTMCFoamParticle();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MCDict_343_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCFoamParticle* dest = (TMCFoamParticle*) G__getstructoffset();
   *dest = *(TMCFoamParticle*) libp->para[0].ref;
   const TMCFoamParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCGenerator */
static int G__MCDict_344_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCGenerator* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCGenerator((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TMCGenerator((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCGenerator((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TMCGenerator((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->Flush();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->ParseBeam((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->ParseTarget((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->ParseTargetQF((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->ParseParticle((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->InitParticleDist((Char_t*) G__int(libp->para[0]), (TMCParticle*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TMCGenerator*) G__getstructoffset())->InitTree((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TMCGenerator*) G__getstructoffset())->InitTree((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->SaveEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->CloseEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->Generate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->GEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->GP4((TMCParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TMCGenerator*) G__getstructoffset())->InitNtuple((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TMCGenerator*) G__getstructoffset())->InitNtuple((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->SaveNtuple();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->CloseNtuple();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetRand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCGenerator*) G__getstructoffset())->GetSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCGenerator*) G__getstructoffset())->GetTargetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCGenerator*) G__getstructoffset())->GetTargetRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCGenerator*) G__getstructoffset())->GetTargetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetTargetCentre());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetBeamCentre());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetP4Target());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetP4Beam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetP4R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetBeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetReaction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCGenerator*) G__getstructoffset())->GetNthrow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCGenerator*) G__getstructoffset())->GetNParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetResonance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetReactionList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TMCGenerator*) G__getstructoffset())->GetTreeFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetTreeFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetBranch());
      result7->obj.reftype.reftype = 2;
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TMCGenerator*) G__getstructoffset())->GetEvent());
      result7->obj.reftype.reftype = 2;
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCGenerator*) G__getstructoffset())->IsTreeOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCGenerator*) G__getstructoffset())->IsNtupleOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCGenerator*) G__getstructoffset())->IsError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCGenerator*) G__getstructoffset())->GetParticle((Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_344_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCDict_344_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCGenerator(*(TMCGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCGenerator G__TTMCGenerator;
static int G__MCDict_344_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TMCGenerator*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCGenerator*) (soff+(sizeof(TMCGenerator)*i)))->~G__TTMCGenerator();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TMCGenerator*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TMCGenerator*) (soff))->~G__TTMCGenerator();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCFoamGenerator */
static int G__MCDict_345_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCFoamGenerator* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCFoamGenerator((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TMCFoamGenerator((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCFoamGenerator((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TMCFoamGenerator((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamGenerator*) G__getstructoffset())->ReadDatabase((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCFoamGenerator*) G__getstructoffset())->GetFoamList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamGenerator*) G__getstructoffset())->GetFoamInitOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamGenerator*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamGenerator*) G__getstructoffset())->GetXscale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCFoamGenerator*) G__getstructoffset())->GetScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamGenerator*) G__getstructoffset())->GetNDim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamGenerator*) G__getstructoffset())->GetFnOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCFoamGenerator*) G__getstructoffset())->GetIbrem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCFoamGenerator*) G__getstructoffset())->IsBremWgt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCFoamGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCFoamGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCFoamGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCFoamGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCFoamGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCFoamGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_345_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCFoamGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCDict_345_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCFoamGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCFoamGenerator(*(TMCFoamGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCFoamGenerator G__TTMCFoamGenerator;
static int G__MCDict_345_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TMCFoamGenerator*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCFoamGenerator*) (soff+(sizeof(TMCFoamGenerator)*i)))->~G__TTMCFoamGenerator();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TMCFoamGenerator*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TMCFoamGenerator*) (soff))->~G__TTMCFoamGenerator();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCPhotoPSInt */
static int G__MCDict_353_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCPhotoPSInt* p = NULL;
   long gvp = G__getgvp();
   //m: 6
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TMCPhotoPSInt(
(Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t**) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TMCPhotoPSInt(
(Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t**) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCPhotoPSInt*) G__getstructoffset())->GenPSO();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCPhotoPSInt*) G__getstructoffset())->RecoilPol((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCPhotoPSInt*) G__getstructoffset())->GetNE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCPhotoPSInt*) G__getstructoffset())->GetNth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCPhotoPSInt*) G__getstructoffset())->GetPSO());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCPhotoPSInt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPhotoPSInt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCPhotoPSInt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCPhotoPSInt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCPhotoPSInt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPhotoPSInt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCPhotoPSInt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPhotoPSInt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_353_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCPhotoPSInt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCDict_353_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCPhotoPSInt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCPhotoPSInt(*(TMCPhotoPSInt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCPhotoPSInt G__TTMCPhotoPSInt;
static int G__MCDict_353_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TMCPhotoPSInt*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCPhotoPSInt*) (soff+(sizeof(TMCPhotoPSInt)*i)))->~G__TTMCPhotoPSInt();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TMCPhotoPSInt*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TMCPhotoPSInt*) (soff))->~G__TTMCPhotoPSInt();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MCDict_353_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCPhotoPSInt* dest = (TMCPhotoPSInt*) G__getstructoffset();
   *dest = *(TMCPhotoPSInt*) libp->para[0].ref;
   const TMCPhotoPSInt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCPhotoPSGenerator */
static int G__MCDict_354_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCPhotoPSGenerator* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCPhotoPSGenerator((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TMCPhotoPSGenerator((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TMCPhotoPSGenerator((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TMCPhotoPSGenerator((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCPhotoPSGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPhotoPSGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCPhotoPSGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCPhotoPSGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCPhotoPSGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPhotoPSGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCPhotoPSGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCPhotoPSGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MCDict_354_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCPhotoPSGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MCDict_354_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCPhotoPSGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCPhotoPSGenerator(*(TMCPhotoPSGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCPhotoPSGenerator G__TTMCPhotoPSGenerator;
static int G__MCDict_354_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TMCPhotoPSGenerator*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCPhotoPSGenerator*) (soff+(sizeof(TMCPhotoPSGenerator)*i)))->~G__TTMCPhotoPSGenerator();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TMCPhotoPSGenerator*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TMCPhotoPSGenerator*) (soff))->~G__TTMCPhotoPSGenerator();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMCParticle */

/* TMCResonance */

/* TMCFoamInt */

/* TMCFoamParticle */

/* TMCGenerator */

/* TMCFoamGenerator */

/* TMCPhotoPSInt */

/* TMCPhotoPSGenerator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMCDict {
 public:
  G__Sizep2memfuncMCDict(): p(&G__Sizep2memfuncMCDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMCDict::*p)();
};

size_t G__get_sizep2memfuncMCDict()
{
  G__Sizep2memfuncMCDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMCDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCDictLN_TMCParticle))) {
     TMCParticle *G__Lderived;
     G__Lderived=(TMCParticle*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCParticle),G__get_linked_tagnum(&G__MCDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCParticle),G__get_linked_tagnum(&G__MCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCDictLN_TMCResonance))) {
     TMCResonance *G__Lderived;
     G__Lderived=(TMCResonance*)0x1000;
     {
       TMCParticle *G__Lpbase=(TMCParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCResonance),G__get_linked_tagnum(&G__MCDictLN_TMCParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCResonance),G__get_linked_tagnum(&G__MCDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCResonance),G__get_linked_tagnum(&G__MCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt))) {
     TMCFoamInt *G__Lderived;
     G__Lderived=(TMCFoamInt*)0x1000;
     {
       TFoamIntegrand *G__Lpbase=(TFoamIntegrand*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt),G__get_linked_tagnum(&G__MCDictLN_TFoamIntegrand),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt),G__get_linked_tagnum(&G__MCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle))) {
     TMCFoamParticle *G__Lderived;
     G__Lderived=(TMCFoamParticle*)0x1000;
     {
       TMCParticle *G__Lpbase=(TMCParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle),G__get_linked_tagnum(&G__MCDictLN_TMCParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle),G__get_linked_tagnum(&G__MCDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle),G__get_linked_tagnum(&G__MCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCDictLN_TMCGenerator))) {
     TMCGenerator *G__Lderived;
     G__Lderived=(TMCGenerator*)0x1000;
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCGenerator),G__get_linked_tagnum(&G__MCDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCGenerator),G__get_linked_tagnum(&G__MCDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCGenerator),G__get_linked_tagnum(&G__MCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator))) {
     TMCFoamGenerator *G__Lderived;
     G__Lderived=(TMCFoamGenerator*)0x1000;
     {
       TMCGenerator *G__Lpbase=(TMCGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator),G__get_linked_tagnum(&G__MCDictLN_TMCGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator),G__get_linked_tagnum(&G__MCDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator),G__get_linked_tagnum(&G__MCDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator),G__get_linked_tagnum(&G__MCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt))) {
     TMCPhotoPSInt *G__Lderived;
     G__Lderived=(TMCPhotoPSInt*)0x1000;
     {
       TMCFoamInt *G__Lpbase=(TMCFoamInt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt),G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TFoamIntegrand *G__Lpbase=(TFoamIntegrand*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt),G__get_linked_tagnum(&G__MCDictLN_TFoamIntegrand),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt),G__get_linked_tagnum(&G__MCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator))) {
     TMCPhotoPSGenerator *G__Lderived;
     G__Lderived=(TMCPhotoPSGenerator*)0x1000;
     {
       TMCFoamGenerator *G__Lpbase=(TMCFoamGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator),G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TMCGenerator *G__Lpbase=(TMCGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator),G__get_linked_tagnum(&G__MCDictLN_TMCGenerator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TA2System *G__Lpbase=(TA2System*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator),G__get_linked_tagnum(&G__MCDictLN_TA2System),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator),G__get_linked_tagnum(&G__MCDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator),G__get_linked_tagnum(&G__MCDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMCDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MCDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MCDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMCParticle */
static void G__setup_memvarTMCParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCDictLN_TMCParticle));
   { TMCParticle *p; p=(TMCParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TRandom),-1,-1,2,"fRandom=",0,"random number generator");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TDatabasePDG),-1,-1,2,"fPDG=",0,"PDG particle properties");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TMCParticle),-1,-1,2,"fParent=",0,"parent particle (if decay product)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzVector),-1,-1,2,"fP4=",0,"4 momentum in Lab frame");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzVector),-1,-1,2,"fP4d=",0,"4 momenta of decay particles");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzVector),-1,-1,2,"fP4Beam=",0,"beam 4-momentum...only used for QF");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TList),-1,-1,2,"fDecayList=",0,"list of decay products");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TH1D),-1,-1,2,"fThetaDist=",0,"angular distribution");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaLow=",0,"low limit polar angle");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaHigh=",0,"high limit polar angle");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TH1D),-1,-1,2,"fCosThDist=",0,"angular distribution");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCosThLow=",0,"low limit polar angle");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCosThHigh=",0,"high limit polar angle");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TH1D),-1,-1,2,"fPhiDist=",0,"angular distribution");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiLow=",0,"low limit asimuthal angle");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiHigh=",0,"high limit asimuthal angle");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TH1D),-1,-1,2,"fTDist=",0,"kinetic energy distribution");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTLow=",0,"low limit kinetic energy");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTHigh=",0,"high limit kinetic energy");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TH1D),-1,-1,2,"fPDist=",0,"|momentum| distribution");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPLow=",0,"low limit momentum");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPHigh=",0,"high limit momentum");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMass=",0,"particle mass");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMassQF=",0,"mass of parton..QF reaction");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMd=",0,"decay particle masses");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMd2=",0,"decay mass squared");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTcm=",0,"kinetic energy in CM");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWt=",0,"weight for particular event, fNd > 3");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWtMax=",0,"maximum weight, fNd > 3");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPDGindex=",0,"PDG code");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNd=",0,"# decay particles");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDecayMode=",0,"mode of decay");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDecay=",0,"does it decay?");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsTrack=",0,"track this particle?");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsResonance=",0,"true = unstable resonance");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCResonance */
static void G__setup_memvarTMCResonance(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCDictLN_TMCResonance));
   { TMCResonance *p; p=(TMCResonance*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGamma=",0,"Breit-wigner width");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TH1D),-1,-1,2,"fMassDist=",0,"mass distribution");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMLow=",0,"low mass limit");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMHigh=",0,"high mass limit");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCFoamInt */
static void G__setup_memvarTMCFoamInt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt));
   { TMCFoamInt *p; p=(TMCFoamInt*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXarg=",0,"foam variables [0,1] interval");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScale=",0,"scaling factors for variables");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXscaled=",0,"scaled variables");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYN=",0,"evaluated points on grid");
   G__memvar_setup((void*)NULL,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fXN=",0,"grid point values for each dimension");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUj=",0,"Linear \"Cardinal\" functions");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXd=",0,"x[j] - x[fM0[j]]");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TVector3),-1,-1,2,"fPolB=",0,"Beam pol. Stokes vect. lin 0->90deg,lin -45->45, circ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TVector3),-1,-1,2,"fPolT=",0,"Target pol.");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TVector3),-1,-1,2,"fPolR=",0,"Recoil components should only be set to 1/0");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzVector),-1,-1,2,"flRecPol=",0,"Cal. recoil pol.");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzRotation),-1,-1,2,"fCMtoLAB=",0,"CM -> lab for RecPol");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSN=",0,"# grid values for each dimension");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fM0=",0,"nearest-&-less-than grid indices");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fM1=",0,"fM1[j] = fM0[j] + s, s=0,1");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fM2=",0,"for linear interp compensation");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDim=",0,"# dimensions");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIbrem=",0,"index of Eg element of vector");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDensOpt=",0,"switch for density fn evaluation");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsBremWgt=",0,"bremsstrahlung weighting E photon ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCFoamParticle */
static void G__setup_memvarTMCFoamParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle));
   { TMCFoamParticle *p; p=(TMCFoamParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXscale=",0,"scaled random generated vector");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScale=",0,"Xi linear scale factors");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fITheta=",0,"Theta index of foam vector");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fICosTheta=",0,"Cos(theta) index of foam vector");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIPhi=",0,"Phi index of foam vector");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIEnergy=",0,"Energy index of foam vector");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIMomentum=",0,"Momentum index of foam vector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCGenerator */
static void G__setup_memvarTMCGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCDictLN_TMCGenerator));
   { TMCGenerator *p; p=(TMCGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TRandom),-1,-1,2,"fRand=",0,"random number generator");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSeed=",0,"initial random seed");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrun=",0,"# of runs");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TDatabasePDG),-1,-1,2,"fPDG=",0,"PDG data base");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetMass=",0,"Mass of target (GeV)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetQFRecoilMass=",0,"Mass of recoil fragment in QF");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetRadius=",0,"Target radius (cm)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetLength=",0,"Target 1/2 length (cm)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TVector3),-1,-1,2,"fTargetCentre=",0,"centre-position of target");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TVector3),-1,-1,2,"fVertex=",0,"interaction vertex");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TVector3),-1,-1,2,"fBeamCentre=",0,"production point of beam");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzVector),-1,-1,2,"fP4Target=",0,"target 4-momentum (usually at rest");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzVector),-1,-1,2,"fP4TargetQF=",0,"target 4-mom QF struck particle");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzVector),-1,-1,2,"fP4Beam=",0,"4-momentum of beam");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TLorentzVector),-1,-1,2,"fP4R=",0,"4-momentum beam + target particle");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TMCParticle),-1,-1,2,"fBeam=",0,"beam particle");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TMCParticle),-1,-1,2,"fTargetQF=",0,"quasi-free \"particle\" in target");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TMCParticle),-1,-1,2,"fReaction=",0,"reaction \"particle\"");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNThrow=",0,"# of events");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNParticle=",0,"# particles in final state");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TList),-1,-1,2,"fResonance=",0,"list of resonances");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TList),-1,-1,2,"fReactionList=",0,"list of foam-generating particles");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TList),-1,-1,2,"fParticle=",0,"linked list of particles");
   G__memvar_setup((void*)NULL,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fTreeFileName=",0,"name of output tree file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TFile),-1,-1,2,"fTreeFile=",0,"output tree file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TTree),-1,-1,2,"fTree=",0,"output tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TNtuple),-1,-1,2,"fNtuple=",0,"output ntuple");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__MCDictLN_TBranch),-1,-1,2,"fBranch=",0,"output branches");
   G__memvar_setup((void*)NULL,89,2,0,-1,-1,-1,2,"fEvent=",0,"output data buffers");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsTreeOut=",0,"root output ?");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsNtupleOut=",0,"hbook output ?");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsError=",0,"errors ?");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCFoamGenerator */
static void G__setup_memvarTMCFoamGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator));
   { TMCFoamGenerator *p; p=(TMCFoamGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TList),-1,-1,2,"fFoamList=",0,"list of foam-generating particles");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TFoam),-1,-1,2,"fFoamX=",0,"Foam generator");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt),-1,-1,2,"fInt=",0,"Generator n-dim function for TFoam");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX=",0,"random generated vector");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXscale=",0,"scaled random generated vector");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScale=",0,"Xi linear scale factors");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFoamInitOpt=",0,"options for initialisation stage");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNDim=",0,"Dimension of vector");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFnOpt=",0,"Options for function choice");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIbrem=",0,"Vector element of Egamma");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsBremWgt=",0,"Bremsstrahlung weight Egamma");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCPhotoPSInt */
static void G__setup_memvarTMCPhotoPSInt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt));
   { TMCPhotoPSInt *p; p=(TMCPhotoPSInt*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNE=",0,"number of energies in data base");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNth=",0,"number of polar angles in data base");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNIntp=",0,"size of sub-database for each variable");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPSO=",0,"Array of Evaluated observables");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCPhotoPSGenerator */
static void G__setup_memvarTMCPhotoPSGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator));
   { TMCPhotoPSGenerator *p; p=(TMCPhotoPSGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNE=",0,"# energy bins in database");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNth=",0,"# theta bins in database");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt),-1,-1,2,"fPSInt=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__MCDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMCDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMCParticle(void) {
   /* TMCParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCDictLN_TMCParticle));
   G__memfunc_setup("Pdk",287,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 2, 0, 
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCParticle",1048,G__MCDict_332_0_2, 105, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TRandom' - 0 - - "
"d - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' - "
"g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCParticle",1048,G__MCDict_332_0_3, 105, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TRandom' - 0 - - "
"U 'TDatabasePDG' - 0 - - i - 'Int_t' 0 - - "
"g - 'Bool_t' 0 'kFALSE' - g - 'Bool_t' 0 'kTRUE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCParticle",1048,G__MCDict_332_0_4, 105, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TMCParticle' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Flush",514,G__MCDict_332_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__MCDict_332_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,G__MCDict_332_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenDecay",768,G__MCDict_332_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Gen2Decay",818,G__MCDict_332_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenNDecay",846,G__MCDict_332_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BoostLab",790,G__MCDict_332_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindDist",789,G__MCDict_332_0_12, 85, G__get_linked_tagnum(&G__MCDictLN_TH1D), -1, 2, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Char_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDist",704,G__MCDict_332_0_13, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"D - 'Double_t' 0 - - D - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDist",704,G__MCDict_332_0_14, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'TF1' - 0 - - "
"i - 'Int_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDist",704,G__MCDict_332_0_15, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Char_t' 0 - - "
"D - 'Double_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddDecay",751,G__MCDict_332_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMCParticle' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReplaceDecay",1186,G__MCDict_332_0_17, 85, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 1, 1, 1, 0, "U 'TMCParticle' - 0 - decay", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenMCDist",830,G__MCDict_332_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "action only necessary for foam particle", (void*) NULL, 1);
   G__memfunc_setup("GetRandom",897,G__MCDict_332_0_19, 85, G__get_linked_tagnum(&G__MCDictLN_TRandom), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__MCDict_332_0_20, 85, G__get_linked_tagnum(&G__MCDictLN_TDatabasePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParent",918,G__MCDict_332_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMCParticle' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParent",906,G__MCDict_332_0_22, 85, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4",420,G__MCDict_332_0_23, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__MCDict_332_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__MCDict_332_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4d",520,G__MCDict_332_0_26, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4d",520,G__MCDict_332_0_27, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4Beam",793,G__MCDict_332_0_28, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecayList",1186,G__MCDict_332_0_29, 85, G__get_linked_tagnum(&G__MCDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaDist",1194,G__MCDict_332_0_30, 85, G__get_linked_tagnum(&G__MCDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaLow",1096,G__MCDict_332_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaHigh",1174,G__MCDict_332_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosThDist",1173,G__MCDict_332_0_33, 85, G__get_linked_tagnum(&G__MCDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosThLow",1075,G__MCDict_332_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosThHigh",1153,G__MCDict_332_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiDist",981,G__MCDict_332_0_36, 85, G__get_linked_tagnum(&G__MCDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiLow",883,G__MCDict_332_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiHigh",961,G__MCDict_332_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDist",776,G__MCDict_332_0_39, 85, G__get_linked_tagnum(&G__MCDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTLow",678,G__MCDict_332_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTHigh",756,G__MCDict_332_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDist",772,G__MCDict_332_0_42, 85, G__get_linked_tagnum(&G__MCDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPLow",674,G__MCDict_332_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPHigh",752,G__MCDict_332_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__MCDict_332_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassQF",843,G__MCDict_332_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQF",451,G__MCDict_332_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - mqf U 'TLorentzVector' - 0 - p4beam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__MCDict_332_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMass",704,G__MCDict_332_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMd",465,G__MCDict_332_0_50, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMd2",515,G__MCDict_332_0_51, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTcm",580,G__MCDict_332_0_52, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWt",491,G__MCDict_332_0_53, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWtMax",785,G__MCDict_332_0_54, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDGindex",1043,G__MCDict_332_0_55, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNd",466,G__MCDict_332_0_56, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecayMode",1163,G__MCDict_332_0_57, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDecayMode",1175,G__MCDict_332_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDecay",674,G__MCDict_332_0_59, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrack",689,G__MCDict_332_0_60, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsResonance",1114,G__MCDict_332_0_61, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDecay",786,G__MCDict_332_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - isdec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrack",801,G__MCDict_332_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - istr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecay",774,G__MCDict_332_0_64, 85, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Theta",502,G__MCDict_332_0_65, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CosTheta",795,G__MCDict_332_0_66, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Phi",289,G__MCDict_332_0_67, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Energy",618,G__MCDict_332_0_68, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Momentum",850,G__MCDict_332_0_69, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("P4",132,G__MCDict_332_0_70, 117, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '-1.0' m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MCDict_332_0_71, 85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TMCParticle::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MCDict_332_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCParticle::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MCDict_332_0_73, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TMCParticle::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MCDict_332_0_74, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TMCParticle::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCDict_332_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCDict_332_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCParticle::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCDict_332_0_80, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCParticle::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCDict_332_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCParticle::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCDict_332_0_82, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCParticle::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCParticle", 1048, G__MCDict_332_0_83, (int) ('i'), G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 1, 1, 1, 0, "u 'TMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCParticle", 1174, G__MCDict_332_0_84, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MCDict_332_0_85, (int) ('u'), G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 1, 1, 1, 1, 0, "u 'TMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCResonance(void) {
   /* TMCResonance */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCDictLN_TMCResonance));
   G__memfunc_setup("TMCResonance",1154,G__MCDict_333_0_1, 105, G__get_linked_tagnum(&G__MCDictLN_TMCResonance), -1, 0, 8, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TRandom' - 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 '0.0' - d - 'Double_t' 0 '0.0' - "
"i - 'Int_t' 0 'kTRUE' - i - 'Int_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCResonance",1154,G__MCDict_333_0_2, 105, G__get_linked_tagnum(&G__MCDictLN_TMCResonance), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TRandom' - 0 - - "
"i - 'Int_t' 0 - - U 'TDatabasePDG' - 0 - - "
"i - 'Int_t' 0 'kTRUE' - i - 'Int_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCResonance",1154,G__MCDict_333_0_3, 105, G__get_linked_tagnum(&G__MCDictLN_TMCResonance), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TMCResonance' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindDist",789,G__MCDict_333_0_4, 85, G__get_linked_tagnum(&G__MCDictLN_TH1D), -1, 2, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Char_t' 0 - - "
"d - 'Double_t' 0 '0' - d - 'Double_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Mass",404,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGamma",771,G__MCDict_333_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassDist",1096,G__MCDict_333_0_7, 85, G__get_linked_tagnum(&G__MCDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMLow",671,G__MCDict_333_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMHigh",749,G__MCDict_333_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MCDict_333_0_10, 85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TMCResonance::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MCDict_333_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCResonance::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MCDict_333_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TMCResonance::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MCDict_333_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TMCResonance::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCDict_333_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCDict_333_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCResonance::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCDict_333_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCResonance::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCDict_333_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCResonance::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCDict_333_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCResonance::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCResonance", 1154, G__MCDict_333_0_22, (int) ('i'), G__get_linked_tagnum(&G__MCDictLN_TMCResonance), -1, 0, 1, 1, 1, 0, "u 'TMCResonance' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCResonance", 1280, G__MCDict_333_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MCDict_333_0_24, (int) ('u'), G__get_linked_tagnum(&G__MCDictLN_TMCResonance), -1, 1, 1, 1, 1, 0, "u 'TMCResonance' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCFoamInt(void) {
   /* TMCFoamInt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt));
   G__memfunc_setup("LinIntpAccum",1191,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - j d - 'Double_t' 1 - yFit "
"g - 'Bool_t' 0 'kFALSE' comp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IJK",222,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "I - 'Int_t' 0 - mj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenFn",462,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 2, 0, 
"d - 'Double_t' 0 - E d - 'Double_t' 0 - Eg "
"d - 'Double_t' 0 - Thg d - 'Double_t' 0 - Phig "
"d - 'Double_t' 0 - Thpi0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YComp",488,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCFoamInt",914,G__MCDict_342_0_5, 105, G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - - D - 'Double_t' 0 - - "
"D - 'Double_t' 2 - - I - 'Int_t' 0 - - "
"D - 'Double_t' 0 - - i - 'Int_t' 0 'EDensLinear' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LinInterpN",995,G__MCDict_342_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - - g - 'Bool_t' 0 'kFALSE' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Density",736,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nDim D - 'Double_t' 0 - Xarg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Scale",488,G__MCDict_342_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - in D - 'Double_t' 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPol",599,G__MCDict_342_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPolB",665,G__MCDict_342_0_10, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPolT",683,G__MCDict_342_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPolR",681,G__MCDict_342_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBremWgt",996,G__MCDict_342_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - wgt i - 'Int_t' 0 '-1' ibrem", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXarg",690,G__MCDict_342_0_14, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScale",776,G__MCDict_342_0_15, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXscaled",996,G__MCDict_342_0_16, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYN",455,G__MCDict_342_0_17, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXN",454,G__MCDict_342_0_18, 68, -1, G__defined_typename("Double_t"), 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPolB",653,G__MCDict_342_0_19, 85, G__get_linked_tagnum(&G__MCDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPolT",671,G__MCDict_342_0_20, 85, G__get_linked_tagnum(&G__MCDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPolR",669,G__MCDict_342_0_21, 85, G__get_linked_tagnum(&G__MCDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetlRecPol",977,G__MCDict_342_0_22, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRecPol",869,G__MCDict_342_0_23, 117, G__get_linked_tagnum(&G__MCDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCMtoLAB",866,G__MCDict_342_0_24, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzRotation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNDim",648,G__MCDict_342_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIbrem",783,G__MCDict_342_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDensOpt",989,G__MCDict_342_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsBremWgt",884,G__MCDict_342_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Test",416,G__MCDict_342_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MCDict_342_0_30, 85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TMCFoamInt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MCDict_342_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamInt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MCDict_342_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TMCFoamInt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MCDict_342_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TMCFoamInt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCDict_342_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCDict_342_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamInt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCDict_342_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCFoamInt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCDict_342_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamInt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCDict_342_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCFoamInt::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCFoamInt", 914, G__MCDict_342_0_42, (int) ('i'), G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt), -1, 0, 1, 1, 1, 0, "u 'TMCFoamInt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCFoamInt", 1040, G__MCDict_342_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MCDict_342_0_44, (int) ('u'), G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt), -1, 1, 1, 1, 1, 0, "u 'TMCFoamInt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCFoamParticle(void) {
   /* TMCFoamParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle));
   G__memfunc_setup("TMCFoamParticle",1435,G__MCDict_343_0_1, 105, G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle), -1, 0, 7, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TRandom' - 0 - - "
"U 'TDatabasePDG' - 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - C - 'Char_t' 0 - - "
"U 'TA2System' - 0 'NULL' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCFoamParticle",1435,G__MCDict_343_0_2, 105, G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - - U 'TMCParticle' - 0 - - "
"D - 'Double_t' 0 - - D - 'Double_t' 0 - - "
"I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Flush",514,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXscale",896,G__MCDict_343_0_5, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScale",776,G__MCDict_343_0_6, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetITheta",863,G__MCDict_343_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetICosTheta",1156,G__MCDict_343_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIPhi",650,G__MCDict_343_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIEnergy",979,G__MCDict_343_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIMomentum",1211,G__MCDict_343_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFoamLink",1085,G__MCDict_343_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Theta",502,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CosTheta",795,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Phi",289,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Energy",618,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Momentum",850,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Dist",404,G__MCDict_343_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MCDict_343_0_19, 85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TMCFoamParticle::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MCDict_343_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamParticle::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MCDict_343_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TMCFoamParticle::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MCDict_343_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TMCFoamParticle::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCDict_343_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCDict_343_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamParticle::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCDict_343_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCFoamParticle::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCDict_343_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamParticle::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCDict_343_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCFoamParticle::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCFoamParticle", 1435, G__MCDict_343_0_31, (int) ('i'), G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle), -1, 0, 1, 1, 1, 0, "u 'TMCFoamParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCFoamParticle", 1561, G__MCDict_343_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MCDict_343_0_33, (int) ('u'), G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle), -1, 1, 1, 1, 1, 0, "u 'TMCFoamParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCGenerator(void) {
   /* TMCGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCDictLN_TMCGenerator));
   G__memfunc_setup("TMCGenerator",1163,G__MCDict_344_0_1, 105, G__get_linked_tagnum(&G__MCDictLN_TMCGenerator), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 '999999' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Flush",514,G__MCDict_344_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", "clear memory", (void*) NULL, 1);
   G__memfunc_setup("ParseBeam",880,G__MCDict_344_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "beam parameter setup", (void*) NULL, 1);
   G__memfunc_setup("ParseTarget",1122,G__MCDict_344_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "target parameter setup", (void*) NULL, 1);
   G__memfunc_setup("ParseTargetQF",1273,G__MCDict_344_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "QF target particle setup", (void*) NULL, 1);
   G__memfunc_setup("ParseParticle",1327,G__MCDict_344_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "reaction particles setup", (void*) NULL, 1);
   G__memfunc_setup("InitParticleDist",1628,G__MCDict_344_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 0 - - U 'TMCParticle' - 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("InitTree",804,G__MCDict_344_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 '0' -", "for ROOT TTree output", (void*) NULL, 1);
   G__memfunc_setup("SaveEvent",913,G__MCDict_344_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "write event to TTree", (void*) NULL, 1);
   G__memfunc_setup("CloseEvent",1016,G__MCDict_344_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "close TTree and file", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "parameter input from config file", (void*) NULL, 1);
   G__memfunc_setup("Generate",811,G__MCDict_344_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "do the business", (void*) NULL, 1);
   G__memfunc_setup("GEvent",585,G__MCDict_344_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "generate single event", (void*) NULL, 1);
   G__memfunc_setup("GP4",203,G__MCDict_344_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMCParticle' - 0 - particle", "create 4-momenta for reaction", (void*) NULL, 1);
   G__memfunc_setup("InitNtuple",1036,G__MCDict_344_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - name i - 'Int_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SaveNtuple",1031,G__MCDict_344_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", "write event to HBOOK ntuple", (void*) NULL, 1);
   G__memfunc_setup("CloseNtuple",1134,G__MCDict_344_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "close ntuple", (void*) NULL, 1);
   G__memfunc_setup("GetRand",677,G__MCDict_344_0_19, 85, G__get_linked_tagnum(&G__MCDictLN_TRandom), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeed",673,G__MCDict_344_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__MCDict_344_0_21, 85, G__get_linked_tagnum(&G__MCDictLN_TDatabasePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetMass",1307,G__MCDict_344_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetRadius",1519,G__MCDict_344_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetLength",1513,G__MCDict_344_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetCentre",1512,G__MCDict_344_0_25, 85, G__get_linked_tagnum(&G__MCDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertex",926,G__MCDict_344_0_26, 85, G__get_linked_tagnum(&G__MCDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamCentre",1270,G__MCDict_344_0_27, 85, G__get_linked_tagnum(&G__MCDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4Target",1035,G__MCDict_344_0_28, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4Beam",793,G__MCDict_344_0_29, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4R",502,G__MCDict_344_0_30, 85, G__get_linked_tagnum(&G__MCDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeam",661,G__MCDict_344_0_31, 85, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReaction",1109,G__MCDict_344_0_32, 85, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNthrow",930,G__MCDict_344_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNParticle",1186,G__MCDict_344_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResonance",1214,G__MCDict_344_0_35, 85, G__get_linked_tagnum(&G__MCDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReactionList",1521,G__MCDict_344_0_36, 85, G__get_linked_tagnum(&G__MCDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__MCDict_344_0_37, 85, G__get_linked_tagnum(&G__MCDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeFileName",1457,G__MCDict_344_0_38, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeFile",1072,G__MCDict_344_0_39, 85, G__get_linked_tagnum(&G__MCDictLN_TFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__MCDict_344_0_40, 85, G__get_linked_tagnum(&G__MCDictLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranch",878,G__MCDict_344_0_41, 85, G__get_linked_tagnum(&G__MCDictLN_TBranch), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__MCDict_344_0_42, 89, -1, -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTreeOut",900,G__MCDict_344_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNtupleOut",1132,G__MCDict_344_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsError",710,G__MCDict_344_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__MCDict_344_0_46, 85, G__get_linked_tagnum(&G__MCDictLN_TMCParticle), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MCDict_344_0_47, 85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TMCGenerator::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MCDict_344_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCGenerator::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MCDict_344_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TMCGenerator::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MCDict_344_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TMCGenerator::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCDict_344_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCDict_344_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCGenerator::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCDict_344_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCGenerator::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCDict_344_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCGenerator::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCDict_344_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCGenerator::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCGenerator", 1163, G__MCDict_344_0_59, (int) ('i'), G__get_linked_tagnum(&G__MCDictLN_TMCGenerator), -1, 0, 1, 1, 1, 0, "u 'TMCGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCGenerator", 1289, G__MCDict_344_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCFoamGenerator(void) {
   /* TMCFoamGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator));
   G__memfunc_setup("TMCFoamGenerator",1550,G__MCDict_345_0_1, 105, G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 '999999' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Flush",514,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "clear memory", (void*) NULL, 1);
   G__memfunc_setup("PostInit",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "init after parameter input", (void*) NULL, 1);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "parameter input from config file", (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,G__MCDict_345_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "input kinematics distribution", (void*) NULL, 1);
   G__memfunc_setup("GEvent",585,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "single event", (void*) NULL, 1);
   G__memfunc_setup("GetFoamList",1087,G__MCDict_345_0_7, 85, G__get_linked_tagnum(&G__MCDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFoamInitOpt",1386,G__MCDict_345_0_8, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetX",376,G__MCDict_345_0_9, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXscale",896,G__MCDict_345_0_10, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScale",776,G__MCDict_345_0_11, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNDim",648,G__MCDict_345_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFnOpt",775,G__MCDict_345_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIbrem",783,G__MCDict_345_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsBremWgt",884,G__MCDict_345_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MCDict_345_0_16, 85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TMCFoamGenerator::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MCDict_345_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamGenerator::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MCDict_345_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TMCFoamGenerator::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MCDict_345_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TMCFoamGenerator::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCDict_345_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCDict_345_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamGenerator::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCDict_345_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCFoamGenerator::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCDict_345_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCFoamGenerator::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCDict_345_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCFoamGenerator::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCFoamGenerator", 1550, G__MCDict_345_0_28, (int) ('i'), G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator), -1, 0, 1, 1, 1, 0, "u 'TMCFoamGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCFoamGenerator", 1676, G__MCDict_345_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCPhotoPSInt(void) {
   /* TMCPhotoPSInt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt));
   G__memfunc_setup("TMCPhotoPSInt",1212,G__MCDict_353_0_1, 105, G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - - D - 'Double_t' 0 - - "
"D - 'Double_t' 2 - - I - 'Int_t' 0 - - "
"D - 'Double_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Density",736,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nDim D - 'Double_t' 0 - Xarg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenPSO",524,G__MCDict_353_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RecoilPol",905,G__MCDict_353_0_4, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNE",435,G__MCDict_353_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNth",586,G__MCDict_353_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPSO",530,G__MCDict_353_0_7, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MCDict_353_0_8, 85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TMCPhotoPSInt::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MCDict_353_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCPhotoPSInt::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MCDict_353_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TMCPhotoPSInt::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MCDict_353_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TMCPhotoPSInt::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCDict_353_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCDict_353_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCPhotoPSInt::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCDict_353_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCPhotoPSInt::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCDict_353_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCPhotoPSInt::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCDict_353_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCPhotoPSInt::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCPhotoPSInt", 1212, G__MCDict_353_0_20, (int) ('i'), G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt), -1, 0, 1, 1, 1, 0, "u 'TMCPhotoPSInt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCPhotoPSInt", 1338, G__MCDict_353_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MCDict_353_0_22, (int) ('u'), G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt), -1, 1, 1, 1, 1, 0, "u 'TMCPhotoPSInt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCPhotoPSGenerator(void) {
   /* TMCPhotoPSGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator));
   G__memfunc_setup("TMCPhotoPSGenerator",1848,G__MCDict_354_0_1, 105, G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - i - 'Int_t' 0 '999999' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - -", "parameter input from config file", (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - -", "Read observables data base", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MCDict_354_0_4, 85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TMCPhotoPSGenerator::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MCDict_354_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCPhotoPSGenerator::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MCDict_354_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TMCPhotoPSGenerator::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MCDict_354_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TMCPhotoPSGenerator::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MCDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MCDict_354_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MCDict_354_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCPhotoPSGenerator::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MCDict_354_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCPhotoPSGenerator::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MCDict_354_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TMCPhotoPSGenerator::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MCDict_354_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TMCPhotoPSGenerator::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCPhotoPSGenerator", 1848, G__MCDict_354_0_16, (int) ('i'), G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator), -1, 0, 1, 1, 1, 0, "u 'TMCPhotoPSGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCPhotoPSGenerator", 1974, G__MCDict_354_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMCDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMCDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMCDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MCDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TDatabasePDG = { "TDatabasePDG" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TLorentzRotation = { "TLorentzRotation" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TRandom = { "TRandom" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TA2System = { "TA2System" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMCParticle = { "TMCParticle" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMCResonance = { "TMCResonance" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TFoamIntegrand = { "TFoamIntegrand" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TFoam = { "TFoam" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMCFoamInt = { "TMCFoamInt" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMCFoamParticle = { "TMCFoamParticle" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMCGenerator = { "TMCGenerator" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMCFoamGenerator = { "TMCFoamGenerator" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMCPhotoPSInt = { "TMCPhotoPSInt" , 99 , -1 };
G__linked_taginfo G__MCDictLN_TMCPhotoPSGenerator = { "TMCPhotoPSGenerator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMCDict() {
  G__MCDictLN_TClass.tagnum = -1 ;
  G__MCDictLN_TBuffer.tagnum = -1 ;
  G__MCDictLN_TMemberInspector.tagnum = -1 ;
  G__MCDictLN_TObject.tagnum = -1 ;
  G__MCDictLN_TNamed.tagnum = -1 ;
  G__MCDictLN_TList.tagnum = -1 ;
  G__MCDictLN_TDatabasePDG.tagnum = -1 ;
  G__MCDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MCDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MCDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MCDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MCDictLN_TVector3.tagnum = -1 ;
  G__MCDictLN_TLorentzRotation.tagnum = -1 ;
  G__MCDictLN_TLorentzVector.tagnum = -1 ;
  G__MCDictLN_TRandom.tagnum = -1 ;
  G__MCDictLN_TFile.tagnum = -1 ;
  G__MCDictLN_TTree.tagnum = -1 ;
  G__MCDictLN_TBranch.tagnum = -1 ;
  G__MCDictLN_TNtuple.tagnum = -1 ;
  G__MCDictLN_TA2System.tagnum = -1 ;
  G__MCDictLN_TF1.tagnum = -1 ;
  G__MCDictLN_TH1D.tagnum = -1 ;
  G__MCDictLN_TMCParticle.tagnum = -1 ;
  G__MCDictLN_TMCResonance.tagnum = -1 ;
  G__MCDictLN_TFoamIntegrand.tagnum = -1 ;
  G__MCDictLN_TFoam.tagnum = -1 ;
  G__MCDictLN_TMCFoamInt.tagnum = -1 ;
  G__MCDictLN_TMCFoamParticle.tagnum = -1 ;
  G__MCDictLN_TMCGenerator.tagnum = -1 ;
  G__MCDictLN_TMCFoamGenerator.tagnum = -1 ;
  G__MCDictLN_TMCPhotoPSInt.tagnum = -1 ;
  G__MCDictLN_TMCPhotoPSGenerator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMCDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MCDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TList);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TDatabasePDG);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TLorentzRotation);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TRandom);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TNtuple);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TA2System);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TF1);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TH1D);
   G__tagtable_setup(G__get_linked_tagnum(&G__MCDictLN_TMCParticle),sizeof(TMCParticle),-1,324608,(char*)NULL,G__setup_memvarTMCParticle,G__setup_memfuncTMCParticle);
   G__tagtable_setup(G__get_linked_tagnum(&G__MCDictLN_TMCResonance),sizeof(TMCResonance),-1,324608,(char*)NULL,G__setup_memvarTMCResonance,G__setup_memfuncTMCResonance);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TFoamIntegrand);
   G__get_linked_tagnum_fwd(&G__MCDictLN_TFoam);
   G__tagtable_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamInt),sizeof(TMCFoamInt),-1,324608,(char*)NULL,G__setup_memvarTMCFoamInt,G__setup_memfuncTMCFoamInt);
   G__tagtable_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamParticle),sizeof(TMCFoamParticle),-1,324608,(char*)NULL,G__setup_memvarTMCFoamParticle,G__setup_memfuncTMCFoamParticle);
   G__tagtable_setup(G__get_linked_tagnum(&G__MCDictLN_TMCGenerator),sizeof(TMCGenerator),-1,324608,(char*)NULL,G__setup_memvarTMCGenerator,G__setup_memfuncTMCGenerator);
   G__tagtable_setup(G__get_linked_tagnum(&G__MCDictLN_TMCFoamGenerator),sizeof(TMCFoamGenerator),-1,324608,(char*)NULL,G__setup_memvarTMCFoamGenerator,G__setup_memfuncTMCFoamGenerator);
   G__tagtable_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSInt),sizeof(TMCPhotoPSInt),-1,324608,(char*)NULL,G__setup_memvarTMCPhotoPSInt,G__setup_memfuncTMCPhotoPSInt);
   G__tagtable_setup(G__get_linked_tagnum(&G__MCDictLN_TMCPhotoPSGenerator),sizeof(TMCPhotoPSGenerator),-1,324608,(char*)NULL,G__setup_memvarTMCPhotoPSGenerator,G__setup_memfuncTMCPhotoPSGenerator);
}
extern "C" void G__cpp_setupMCDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMCDict()");
  G__set_cpp_environmentMCDict();
  G__cpp_setup_tagtableMCDict();

  G__cpp_setup_inheritanceMCDict();

  G__cpp_setup_typetableMCDict();

  G__cpp_setup_memvarMCDict();

  G__cpp_setup_memfuncMCDict();
  G__cpp_setup_globalMCDict();
  G__cpp_setup_funcMCDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMCDict();
  return;
}
class G__cpp_setup_initMCDict {
  public:
    G__cpp_setup_initMCDict() { G__add_setup_func("MCDict",(G__incsetup)(&G__cpp_setupMCDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMCDict() { G__remove_setup_func("MCDict"); }
};
G__cpp_setup_initMCDict G__cpp_setup_initializerMCDict;

